# define variables
VPATH   = ./
HDRDIR  = ./include
LIBDIR	= ./lib
# adjust this for your system
CUDADIR=/usr/local/cuda/

# set options for this machine
# specify which compilers to use for c, fortran and linking
CC	= mpicc
LD	= mpicxx
NVCC	= nvcc

# compiler flags to be used (set to compile with debugging on)
CFLAGS = -Dp_N=$(N) -DNDG2d -DCUDA -I/opt/local/include -I/usr/include/malloc -I$(HDRDIR) -O3 -I$(CUDADIR)/include

# link flags to be used 
LDFLAGS	= -I$(HDRDIR) -L. -L./$(LIBDIR) -O3 -L$(CUDADIR)/lib

# libraries to be linked in
LIBS	=  -lparmetis -lmetis  -lm -lcuda -lcudart

# types of files we are going to construct rules for
.SUFFIXES: .c .f .cu

# rule for .c files
.c.o:
	$(CC) $(CFLAGS) -o $*.o -c $*.c
.cu.o: 
	$(NVCC) -o $*.o -c $*.cu --compiler-options -O3 --use_fast_math  $(CFLAGS) 

# list of objects to be compiled
OBJS    = \
	src/Mesh2d.o\
	src/Utils.o\
	src/LoadBalance2d.o\
	src/FacePair2d.o\
	src/ParallelPairs.o\
	src/BuildMaps2d.o\
	src/StartUp2d.o\
	src/MaxwellsRun2d.o\
	src/MaxwellsMPI2d.o\
	src/MaxwellsKernel2d.o\
	src/MaxwellsDriver2d.o

MaxwellsGPU2d:$(OBJS) 
	$(LD)  $(LDFLAGS)  -o MaxwellsGPU2d $(OBJS) $(LIBS)
	rm -r $(OBJS)

# what to do if user types "make clean"
clean :
	rm -r $(OBJS)


