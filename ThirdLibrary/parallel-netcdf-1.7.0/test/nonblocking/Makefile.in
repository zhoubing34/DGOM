#
# Copyright (C) 2012, Northwestern University and Argonne National Laboratory
# See COPYRIGHT notice in top-level directory.
#
# $Id: Makefile.in 2318 2016-02-04 00:18:26Z wkliao $
#
# @configure_input@

srcdir = @srcdir@
VPATH  = @srcdir@

include ../../macros.make

INCLUDES  = -I../../src/lib -I$(srcdir)/../common
FPPFLAGS += -I../../src/libf @FC_MODINC@../../src/libf90 @FC_MODINC@../common
LDFLAGS  := -L../common $(LDFLAGS)
LIBS     := $(LIBRARY) -ltestutils $(LIBS) @LCOV_LIB@
ifeq (@PNC_DEBUG@, yes)
CPPFLAGS := $(CPPFLAGS) -DPNC_DEBUG
endif

C_SRCS   = mcoll_perf.c \
           test_bput.c \
           interleaved.c \
           i_varn_int64.c \
           bput_varn_uint.c \
           flexible_bput.c \
           wait_after_indep.c \
           column_wise.c \
           req_all.c \
           i_varn_indef.c

F77_SRCS = mcoll_testf77.f \
           test_bputf77.f

F90_SRCS = mcoll_testf.f90 \
           test_bputf.f90

PROGS     = $(C_SRCS:.c=)
OBJS      = $(C_SRCS:.c=.o)
ifeq (@has_fortran@, yes)
PROGS     += $(F77_SRCS:.f=)
OBJS      += $(F77_SRCS:.f=.o)
ifeq (@mpi_mod@, yes)
PROGS     += $(F90_SRCS:.f90=)
OBJS      += $(F90_SRCS:.f90=.o)
endif
endif

GARBAGE      = $(PROGS) *.nc
PACKING_LIST = $(C_SRCS) $(F77_SRCS) $(F90_SRCS) Makefile.in README depend

all: $(PROGS)

$(C_SRCS:.c=.o): $(srcdir)/../common/testutils.h

$(PROGS): ../common/libtestutils.a

../common/libtestutils.a:
	set -e; cd ../common && $(MAKE) $(MFLAGS) all

mcoll_perf: mcoll_perf.o $(LIBRARY)
	$(LINK.c) $< $(LDFLAGS) $(LIBS)

test_bput: test_bput.o $(LIBRARY)
	$(LINK.c) $< $(LDFLAGS) $(LIBS)

i_varn_int64: i_varn_int64.o $(LIBRARY)
	$(LINK.c) $< $(LDFLAGS) $(LIBS)

bput_varn_uint: bput_varn_uint.o $(LIBRARY)
	$(LINK.c) $< $(LDFLAGS) $(LIBS)

interleaved: interleaved.o $(LIBRARY)
	$(LINK.c) $< $(LDFLAGS) $(LIBS)

flexible_bput: flexible_bput.o $(LIBRARY)
	$(LINK.c) $< $(LDFLAGS) $(LIBS)

wait_after_indep: wait_after_indep.o $(LIBRARY)
	$(LINK.c) $< $(LDFLAGS) $(LIBS)

column_wise: column_wise.o $(LIBRARY)
	$(LINK.c) $< $(LDFLAGS) $(LIBS)

req_all: req_all.o $(LIBRARY)
	$(LINK.c) $< $(LDFLAGS) $(LIBS)

i_varn_indef: i_varn_indef.o $(LIBRARY)
	$(LINK.c) $< $(LDFLAGS) $(LIBS)

mcoll_testf77: mcoll_testf77.o $(LIBRARY)
	$(LINK.F90) $< $(LDFLAGS) $(LIBS)

mcoll_testf: mcoll_testf.o $(LIBRARY)
	$(LINK.F90) $< $(LDFLAGS) $(LIBS)

test_bputf: test_bputf.o $(LIBRARY)
	$(LINK.F90) $< $(LDFLAGS) $(LIBS)

test_bputf77: test_bputf77.o $(LIBRARY)
	$(LINK.F90) $< $(LDFLAGS) $(LIBS)

check testing verbose_check verbose_testing: $(PROGS)
	$(RM) -f $(TEST_OUTDIR)/testfile.nc*
	for i in $(PROGS); do ( \
	$(TEST_SEQRUN) ./$$i $(TEST_OUTDIR)/testfile.nc \
	; ) ; done

# Some of these tests are designed to run on one process,
# # Run them on 4 processes to see if they can handle well
# Some of these tests are designed to run on 4 processes,
# # Run them on 2, 4, and 6 processes to see if they can handle well
TEST_MPIRUN_2  = $(subst NP,2,$(TEST_MPIRUN))
TEST_MPIRUN_4  = $(subst NP,4,$(TEST_MPIRUN))
TEST_MPIRUN_6  = $(subst NP,6,$(TEST_MPIRUN))

ptest4: $(PROGS)
	$(RM) -f $(TEST_OUTDIR)/testfile.nc $(TEST_OUTDIR)/redef1.nc
	for i in $(PROGS); do ( \
	$(TEST_MPIRUN_4) ./$$i $(TEST_OUTDIR)/testfile.nc \
	; ) ; done

ptest2 : $(PROGS)
	$(RM) -f $(TEST_OUTDIR)/testfile.nc $(TEST_OUTDIR)/redef1.nc
	for i in $(PROGS); do ( \
	$(TEST_MPIRUN_2) ./$$i $(TEST_OUTDIR)/testfile.nc \
	; ) ; done

ptest6 : $(PROGS)
	$(RM) -f $(TEST_OUTDIR)/testfile.nc $(TEST_OUTDIR)/redef1.nc
	for i in $(PROGS); do ( \
	$(TEST_MPIRUN_6) ./$$i $(TEST_OUTDIR)/testfile.nc \
	; ) ; done

ptest: ptest4
ptests: ptest2 ptest4 ptest6
ptest8 ptest10:

include $(srcdir)/../../rules.make
include $(srcdir)/depend

$(LIBRARY): ;

