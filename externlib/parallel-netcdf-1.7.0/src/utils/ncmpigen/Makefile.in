#
# Copyright (C) 2012, Northwestern University and Argonne National Laboratory
# See COPYRIGHT notice in top-level directory.
#
# $Id: Makefile.in 2264 2015-12-22 15:42:59Z wkliao $
#
# @configure_input@

srcdir = @srcdir@
VPATH = @srcdir@

include ../../../macros.make

lex		= @LEX@ -Pncmpi
yacc		= @YACC@ -p ncmpi

NCMPIDUMP	= ../ncmpidump/ncmpidump
PROGRAM		= ncmpigen
MANUAL		= ncmpigen.1

# For VPATH build:
# Add ../../lib into search path because ../../lib/pnetcdf.h is created in
# the build directory at configure time and is included by C files here.
INCLUDES	= -I$(srcdir) -I../../lib

LDFLAGS        += -L../../lib
LIBS           := -lpnetcdf $(LIBS) @LCOV_LIB@

C_SOURCES       = main.c load.c escapes.c getfill.c init.c genlib.c ncmpigentab.c
HEADERS         = generic.h genlib.h ncmpigen.h ncmpigentab.h

PROGRAM_SRCS	= $(C_SOURCES)

OBJS		= $(PROGRAM_SRCS:.c=.o)

PACKING_LIST    = $(C_SOURCES) $(HEADERS) $(MANUAL) \
                  ncmpigenyy.c depend Makefile.in \
                  ncmpigen.l ncmpigen.y c0.cdl

GARBAGE		= $(PROGRAM) \
		  c0.nc c1.cdl c1.nc c2.cdl \
		  f0.nc \
		  ctest.c ctest ctest0.nc ctest1.cdl \
		  ftest.f ftest ftest0.nc ftest1.cdl \
		  lex.ncmpi.c y.tab.c y.tab.h

all:		$(PROGRAM)

#  generating the fortran does not work yet
#test:           $(PROGRAM) b-test c-test f-test FORCE
test:           $(PROGRAM) b-test c-test FORCE

install: $(PROGRAM) $(MANUAL)
	$(INSTALL) -d -m 755 $(MANDIR)/man1
	$(INSTALL_DATA) $(srcdir)/$(MANUAL) $(MANDIR)/man1/$(MANUAL)

	$(INSTALL) -d $(BINDIR)
	$(INSTALL) -m 755 $(PROGRAM) $(BINDIR)/$(PROGRAM)

uninstall:
	$(RM) -f $(BINDIR)/$(PROGRAM)
	$(RM) -f $(MANDIR)/man1/$(MANUAL)

$(PROGRAM):	$(OBJS) $(LIBRARY)
	$(LINK.c) $(OBJS) $(LDFLAGS) $(LIBS) 

# Below is used if a PnetCDF developer wants to rebuild ncmpigenyy.c or
# ncmpigentab.c. In that case, configure.in at the root directory needs
# to check the availability of commands yacc/lex/bison. Otherwise the
# below is never invoked, but records how to do it.
$(srcdir)/ncmpigentab.c \
$(srcdir)/ncmpigentab.h:	ncmpigen.y ncmpigenyy.c ncmpigen.h
ifeq (@have_yacc_lex@, yes)
	$(yacc) -d $(srcdir)/ncmpigen.y; \
	cp -f y.tab.c ncmpigentab.c; \
	cp -f y.tab.h ncmpigentab.h
else
	@echo "Error: one of $? is modified, but cannot find bison or yacc, required to re-generate $@"
endif

ncmpigenyy.c:	ncmpigen.l
ifeq (@have_yacc_lex@, yes)
	$(lex) $(srcdir)/ncmpigen.l; \
	cp -f lex.ncmpi.c ncmpigenyy.c
else
	@echo "Error: $? is modified, but cannot find flex or lex, required to re-generate $@"
endif

vmstab.h \
vmstab.c:	ncmpigen.y
	@echo 1>&2 "$@ is out-of-date with respect to $?"
	@echo 1>&2 "It must be recreated via POSIX yacc(1) on a VMS system"
	false
vms_yy.c:	ncmpigenyy.c
	@echo 1>&2 "$@ is out-of-date with respect to $?"
	@echo 1>&2 "It must be recreated via POSIX lex(1) on a VMS system"
	false

#
# test "-b" option of ncmpigen
#
b-test:		$(PROGRAM) c1.cdl
	@./$(PROGRAM) -b c1.cdl && \
	$(NCMPIDUMP) `pwd`/c1.nc > c2.cdl
	@if diff c1.cdl c2.cdl; then \
	    echo "*** $(PROGRAM) -b test successful ***"; \
	else \
	    echo "*** $(PROGRAM) -b test failed ***"; \
	    exit 1; \
	fi

#
# test "-c" option of ncmpigen
#
c-test:	$(PROGRAM) c1.cdl
	./$(PROGRAM) -c -o ctest0.nc $(srcdir)/c0.cdl > ctest.c && \
	$(COMPILE.c) ctest.c && \
	$(LINK.c) ctest.o -o ctest $(LDFLAGS) $(LIBS) && \
	./ctest	&& \
	$(NCMPIDUMP) -n c1 `pwd`/ctest0.nc > ctest1.cdl
	@if diff c1.cdl ctest1.cdl; then \
	    echo "*** $(PROGRAM) -c test successful ***"; \
	else \
	    echo "*** $(PROGRAM) -c test failed ***"; \
	    exit 1; \
	fi

c1.cdl:	$(PROGRAM) c0.cdl
	./$(PROGRAM) -b -o c0.nc $(srcdir)/c0.cdl
	$(NCMPIDUMP) -n c1 `pwd`/c0.nc > $@

#
# test "-f" option of ncmpigen
#
f-test:	$(PROGRAM) c0.cdl c1.cdl
	@if [ -n "$(MPIF77)" ]; then \
	    $(MAKE) $(MFLAGS) ftest1.cdl && \
	    if diff c1.cdl ftest1.cdl; then \
		echo "*** $(PROGRAM) -f test successful ***"; \
	    else \
		echo "*** $(PROGRAM) -f test failed ***"; \
		exit 1; \
	    fi; \
	else \
	    echo 1>&2 "\`$@' not made because no FORTRAN compiler"; \
	fi

ftest1.cdl: $(PROGRAM) c0.cdl pnetcdf.inc
	./$(PROGRAM) -f -o ftest0.nc $(srcdir)/c0.cdl > ftest.f
	$(COMPILE.f) ftest.f
	$(LINK.f) -o ftest ftest.o $(LDFLAGS) $(LIBS)
	./ftest
	$(NCMPIDUMP) -n c1 ftest0.nc > ftest1.cdl

pnetcdf.inc:
	@if [ -n "$(MPIF77)" ]; then \
	    cp $(srcdir)/../../libf/$@ .; \
	else \
	    echo 1>&2 "\`$@' not made because no FORTRAN compiler"; \
	fi

$(PROGRAM)_src : $(PROGRAM_SRCS)
	#setopt primary_language C
	#load -C $(CPPFLAGS) $(PROGRAM_SRCS)
	#load -C $(LIBS)
	#load -C /usr/lang/SC2.0.1/libansi.a
	#setopt program_name gribtonc

$(PROGRAM)_obj : $(PROGRAM_SRCS)
	#setopt primary_language C
	#load -C $(CPPFLAGS) $(OBJS)
	#load -C $(LIBS)
	#setopt program_name gribtonc

include $(srcdir)/../../../rules.make

include $(srcdir)/depend

.PHONY: $(LIBRARY)
